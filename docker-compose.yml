services:
  db:
    image: postgres:latest
    container_name: db
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
      - POSTGRES_DB=mydb
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mydb"]
      interval: 10s
      retries: 5
      timeout: 5s

  server:
    image: node:latest
    container_name: server
    working_dir: /app
    volumes:
      - ./server:/app
    ports:
      - "3000:3000"
    command: ["npm", "start"]
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend
      - frontend

  client:
    image: nginx:latest
    container_name: client
    ports:
      - "80:80"
    volumes:
      - ./client:/usr/share/nginx/html
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - server
    networks:
      - frontend

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge

